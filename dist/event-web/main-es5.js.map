{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/httpinterceptor.ts","webpack:///src/app/services/event.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/components/sign-up/sign-up.component.ts","webpack:///src/app/components/sign-up/sign-up.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/components/invitation/invitation.component.html","webpack:///src/app/components/invitation/invitation.component.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","apiURL","$event","event","DashboardComponent","eventService","authService","modal","view","Month","CalendarView","viewDate","Date","refresh","events","activeDayIsOpen","getUserEvents","getUserInvitations","date","length","newStart","newEnd","map","iEvent","start","end","handleEvent","action","modalData","open","modalContent","size","subscribe","res","mapResToCalendarEvent","logout","tab","textLabel","i","data","push","closeOpenMonthViewDay","setView","AppComponent","title","AuthGuard","router","isLoggedIn","navigate","LoginComponent","builder","loginForm","group","email","required","password","valid","signIn","value","AppModule","provide","useClass","multi","forRoot","useFactory","MyHttpInterceptor","req","next","authToken","localStorage","getItem","authReq","clone","headers","set","handle","EventService","http","userID","get","inviteID","status","body","put","AuthService","post","pipe","setItem","token","username","user_id","name","user","removeItem","SignUpComponent","formBuilder","loading","submitted","hide","signupForm","minLength","signUpUser","error","onSubmit","routes","path","component","canActivate","AppRoutingModule","InvitationComponent","changeDetectorRefs","displayedColumns","dataSource","id","updateInvitationStatus","detectChanges","bootstrapModule","err","console","webpackEmptyAsyncContext","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:3000/api/v1/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, ChangeDetectionStrategy, ViewChild, TemplateRef } from '@angular/core';\nimport { EventService } from '@services/event.service';\nimport { AuthService } from '@services/auth.service';\nimport { isSameDay, isSameMonth } from 'date-fns';\nimport { Subject } from 'rxjs';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { CalendarEvent, CalendarEventTimesChangedEvent, CalendarView } from 'angular-calendar';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DashboardComponent implements OnInit {\n    @ViewChild('modalContent', { static: true }) modalContent: TemplateRef<any> | undefined;\n    view: CalendarView = CalendarView.Month;\n    CalendarView = CalendarView;\n    viewDate: Date = new Date();\n    modalData?: {\n        event: CalendarEvent;\n    };\n\n    refresh: Subject<any> = new Subject();\n\n    events: CalendarEvent[] = [];\n\n    activeDayIsOpen: boolean = true;\n\n    constructor(\n        private eventService: EventService,\n        private authService: AuthService,\n        private modal: NgbModal) { }\n\n    ngOnInit(): void {\n        this.getUserEvents()\n        this.getUserInvitations()\n    }\n\n    dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }): void {\n        if (isSameMonth(date, this.viewDate)) {\n            if (\n                (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\n                events.length === 0\n            ) {\n                this.activeDayIsOpen = false;\n            } else {\n                this.activeDayIsOpen = true;\n            }\n            this.viewDate = date;\n        }\n    }\n\n    eventTimesChanged({\n        event,\n        newStart,\n        newEnd,\n    }: CalendarEventTimesChangedEvent): void {\n        this.events = this.events.map((iEvent) => {\n            if (iEvent === event) {\n                return {\n                    ...event,\n                    start: newStart,\n                    end: newEnd,\n                };\n            }\n            return iEvent;\n        });\n        this.handleEvent('Dropped or resized', event);\n    }\n\n    handleEvent(action: string, event: CalendarEvent): void {\n        this.modalData = { event };\n        this.modal.open(this.modalContent, { size: 'lg' });\n    }\n\n    setView(view: CalendarView) {\n        this.view = view;\n    }\n\n    closeOpenMonthViewDay() {\n        this.activeDayIsOpen = false;\n    }\n\n    getUserEvents() {\n        this.eventService.getUserEvents().subscribe((res => {\n            this.mapResToCalendarEvent(res)\n        }))\n    }\n\n    logout() {\n        this.authService.logout();\n    }\n\n    getUserInvitations() {\n        this.eventService.getUserInvitations().subscribe((res => {\n        }))\n    }\n\n    onTabClick(event: any) {\n        if (event.tab.textLabel == 'Invitations') {\n            this.getUserInvitations()\n        }\n    }\n\n    mapResToCalendarEvent(res: any) {\n        for (let i = 0; i < res.data.length; i++) {\n            res.data[i].start = new Date(res.data[i].start)\n            res.data[i].end = new Date(res.data[i].end)\n            this.events.push(res.data[i])\n        }\n    }\n\n}\n\n\n\n","<div class=\"welcome-text\">\n    <h1>Welcome to Event Web</h1>\n</div>\n<button href=\"\" class=\"logout\" (click)=\"logout()\">\n    Logout\n</button>\n<mat-tab-group  #tabGroup>\n    <mat-tab label=\"Calendar\">\n        <div class=\"row text-center\">\n            <div class=\"col-md-4\">\n                <div class=\"btn-group\">\n                    <div class=\"btn btn-primary\" mwlCalendarPreviousView=\"mwlCalendarPreviousView\" [view]=\"view\" [(viewDate)]=\"viewDate\" (viewDateChange)=\"closeOpenMonthViewDay()\">\n                        Previous\n                    </div>\n                    <div class=\"btn btn-outline-secondary\" mwlCalendarToday=\"mwlCalendarToday\" [(viewDate)]=\"viewDate\">\n                        Today\n                    </div>\n                    <div class=\"btn btn-primary\" mwlCalendarNextView=\"mwlCalendarNextView\" [view]=\"view\" [(viewDate)]=\"viewDate\" (viewDateChange)=\"closeOpenMonthViewDay()\">\n                        Next\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-md-4\">\n                <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\n            </div>\n            <div class=\"col-md-4\">\n                <div class=\"btn-group\">\n                    <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Month)\" [class.active]=\"view === CalendarView.Month\">\n                        Month\n                    </div>\n                    <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Week)\" [class.active]=\"view === CalendarView.Week\">\n                        Week\n                    </div>\n                    <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Day)\" [class.active]=\"view === CalendarView.Day\">\n                        Day\n                    </div>\n                </div>\n            </div>\n        </div>\n        <br/>\n        <div [ngSwitch]=\"view\">\n            <mwl-calendar-month-view *ngSwitchCase=\"CalendarView.Month\" [viewDate]=\"viewDate\" [events]=\"events\" [refresh]=\"refresh\" [activeDayIsOpen]=\"activeDayIsOpen\" (dayClicked)=\"dayClicked($event.day)\" (eventClicked)=\"handleEvent('Clicked', $event.event)\" (eventTimesChanged)=\"eventTimesChanged($event)\"></mwl-calendar-month-view>\n            <mwl-calendar-week-view *ngSwitchCase=\"CalendarView.Week\" [viewDate]=\"viewDate\" [events]=\"events\" [refresh]=\"refresh\" (eventClicked)=\"handleEvent('Clicked', $event.event)\" (eventTimesChanged)=\"eventTimesChanged($event)\"></mwl-calendar-week-view>\n            <mwl-calendar-day-view *ngSwitchCase=\"CalendarView.Day\" [viewDate]=\"viewDate\" [events]=\"events\" [refresh]=\"refresh\" (eventClicked)=\"handleEvent('Clicked', $event.event)\" (eventTimesChanged)=\"eventTimesChanged($event)\"></mwl-calendar-day-view>\n        </div>\n\n    </mat-tab>\n    <mat-tab label=\"Invitations\">\n        <app-invitation *ngIf=\"tabGroup.selectedIndex === 1\"></app-invitation>\n    </mat-tab>\n</mat-tab-group>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'event-web';\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) {}\n\n  canActivate(): boolean {\n    if(this.authService.isLoggedIn()) {\n      return true;\n    }\n    else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms'\nimport { AuthService } from '@services/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\npublic loginForm = this.builder.group({\n    email: ['',[Validators.required]],\n    password: ['',[Validators.required]]\n})\n  constructor(\n    private builder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    if(this.authService.isLoggedIn()) {\n        this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  signIn() {\n    if (this.loginForm.valid){\n        this.authService.signIn(this.loginForm.value.email, this.loginForm.value.password).subscribe(() =>{\n        this.router.navigate(['/']);\n        })\n    }\n}\n}\n","<div class=\"login-page\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"signIn()\" class=\"form\">\n        <div>\n            <mat-form-field>\n                <input matInput placeholder=\"Email\" type=\"email\" id=\"email\" formControlName=\"email\">\n            </mat-form-field>\n        </div>\n\n        <div>\n            <mat-form-field>\n                <input matInput placeholder=\"Password\" type=\"password\" id=\"password\" formControlName=\"password\">\n            </mat-form-field>\n        </div>\n        <div class=\"row space-between\" text-align=\"start\">\n            <button type=\"submit\">Login</button>\n            <button type=\"submit\" routerLink=\"/signup\">Sign up</button>\n        </div>\n    </form>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from '@components/login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { MyHttpInterceptor } from './httpinterceptor';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport { InvitationComponent } from './components/invitation/invitation.component';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {MatTableModule} from '@angular/material/table';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignUpComponent,\n    DashboardComponent,\n    InvitationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatTabsModule,\n    CalendarModule.forRoot({\n        provide: DateAdapter,\n        useFactory: adapterFactory,\n      }),\n    NgbModule,\n    MatTableModule\n  ],\n  providers: [\n    {\n        provide: HTTP_INTERCEPTORS,\n        useClass: MyHttpInterceptor,\n        multi: true\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n@Injectable()\nexport class MyHttpInterceptor implements HttpInterceptor {\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n\t\tconst authToken = localStorage.getItem('access_token');\n\t\tif (!!authToken) {\n\t\t\tconst authReq = req.clone({\n\t\t\t\theaders:req.headers.set('Authorization', `bearer ${authToken}`)\n\t\t\t});\n\t\t\treturn next.handle(authReq);\n\t\t} else {\n\t\t\treturn next.handle(req);\n\t\t}\n\t}\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n\n  constructor(private http: HttpClient) { }\n\n  getUserEvents(){\n    let userID = localStorage.getItem('user_id')\n    return this.http.get(environment.apiURL+'user/'+userID+'/events')\n  }\n\n  getUserInvitations(){\n    let userID = localStorage.getItem('user_id')\n    return this.http.get(environment.apiURL+'user/'+userID+'/invitations')\n  }\n\n  updateInvitationStatus(inviteID: number, status: string){\n    const body={status}\n    return this.http.put(environment.apiURL+'invite/' + inviteID + '/update-status',body)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@environments/environment';\nimport { Observable } from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {Router} from '@angular/router';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  signIn(email: string, password: string): Observable<any>{\n    const body={email,password}\n    return this.http.post(environment.apiURL+'login',body).pipe(map((res:any)=>{\n        localStorage.setItem('access_token', res.token);\n        localStorage.setItem('user_name', res.username);\n        localStorage.setItem('user_id', res.user_id);\n    }))\n}\n\nsignUpUser(name: string,email: string, password: string){\n    const body = { user:{name,email,password}   }\n    return this.http.post(environment.apiURL + 'register', body)\n}\n\nisLoggedIn(): boolean {\n    if (localStorage.getItem('access_token')) {\n        return true;\n    }\n    return false;\n}\n\nlogout() {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('username');\n    localStorage.removeItem('user_id');\n    this.router.navigate(['/login']);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '@services/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n    signupForm!: FormGroup;\n\tloading = false;\n\tsubmitted = false;\n\thide = true;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.signupForm = this.formBuilder.group({\n        name: ['', [Validators.required]],\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n  onSubmit(){\n    if (this.signupForm.valid){\n    this.authService.signUpUser(this.signupForm.value.name, this.signupForm.value.email,this.signupForm.value.password).subscribe(res=>{\n        this.router.navigate(['/login'])\n    }, error =>{\n\n    })\n    }\n  }\n}\n","<div class=\"sign-up-page\">\n\t<form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\" class=\"form\">\n\t\t<div>\n\t\t\t<mat-form-field>\n\t\t\t\t<input required matInput class=\"capitalize\" placeholder=\"Name\" formControlName=\"name\">\n\t\t\t</mat-form-field>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<mat-form-field >\n\t\t\t\t<input required matInput placeholder=\"Email\" formControlName=\"email\" >\n\t\t\t</mat-form-field>\n\t\t</div>\n\n\t\t<div>\n\t\t\t<mat-form-field>\n\t\t\t\t<input required [type]=\"hide ? 'password' : 'text'\" matInput placeholder=\"Password\" formControlName=\"password\">\n\t\t\t\t<button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n\t\t\t\t\t<mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n\t\t\t\t</button>\n\t\t\t</mat-form-field>\n\t\t</div>\n\t\t<button mat-stroked-button color=\"accent\" class=\"btn-block\">Sign up</button>\n\t</form>\n\t</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from '@components/login/login.component';\nimport { SignUpComponent } from '@components/sign-up/sign-up.component';\nimport { DashboardComponent } from '@components/dashboard/dashboard.component';\nimport { InvitationComponent } from '@components/invitation/invitation.component';\n\nimport { AuthGuard } from '@guards/auth.guard';\n\n\nconst routes: Routes = [\n{\n    path: 'login',\n    component: LoginComponent\n},\n{\n    path: 'signup',\n    component: SignUpComponent\n},\n{\n    path: '',\n    canActivate: [AuthGuard],\n    component: DashboardComponent\n},\n{\n    path: 'invitations',\n    canActivate: [AuthGuard],\n    component: InvitationComponent\n},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container matColumnDef=\"title\">\n      <th mat-header-cell *matHeaderCellDef>Title</th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"start\">\n      <th mat-header-cell *matHeaderCellDef> Start Time </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.start | date :'medium'}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"end\">\n      <th mat-header-cell *matHeaderCellDef> End Time </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.end | date :'medium'}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef> Status </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"actions\">\n        <th  *matHeaderCellDef > Actions </th>\n        <mat-cell *matCellDef=\"let row\" >\n            <button mat-button (click)=\"AcceptOrRejectInvite(row.id,'Accepted')\" class=\"action-btn\">Accept</button>\n            <button mat-button (click)=\"AcceptOrRejectInvite(row.id,'Rejected')\" class=\"action-btn\">Reject</button>\n        </mat-cell>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n</table>","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { EventService} from '@services/event.service';\n\n@Component({\n  selector: 'app-invitation',\n  templateUrl: './invitation.component.html',\n  styleUrls: ['./invitation.component.scss']\n})\nexport class InvitationComponent implements OnInit {\n  displayedColumns: string[] = ['title', 'start', 'end', 'status', 'actions'];\n  public dataSource: any;\n  constructor(private eventService: EventService, private changeDetectorRefs: ChangeDetectorRef ) {}\n\n  ngOnInit(): void {\n    this.getUserInvitations();\n  }\n\n  getUserInvitations() {\n    this.eventService.getUserInvitations().subscribe((res:any) => {\n        this.dataSource = res.data;\n    })\n}\n\nAcceptOrRejectInvite(id:number, status:string){\n    this.eventService.updateInvitationStatus(id,status).subscribe((res:any) => {\n        this.dataSource = res.data;\n        this.changeDetectorRefs.detectChanges();\n    })\n}\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}